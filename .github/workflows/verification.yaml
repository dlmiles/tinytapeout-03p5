name: verification
# either manually started, or on a schedule
on: [ push, workflow_dispatch, pull_request ]
jobs:
  verification:
    env:
        OPENLANE_ROOT:      /home/runner/openlane
        PDK_ROOT:           /home/runner/pdk
        PDK:                sky130A
        DESIGNS:            /home/runner/work/tinytapeout-03p5/tinytapeout-03p5
        TARGET_PATH:        /home/runner/work/tinytapeout-03p5/tinytapeout-03p5
        MGMT_AREA_ROOT:     /home/runner/work/tinytapeout-03p5/tinytapeout-03p5/mgmt_core_wrapper
        MCW_ROOT:           /home/runner/work/tinytapeout-03p5/tinytapeout-03p5/mgmt_core_wrapper
        CARAVEL_ROOT:       /home/runner/work/tinytapeout-03p5/tinytapeout-03p5/caravel
        CORE_VERILOG_PATH:  /home/runner/work/tinytapeout-03p5/tinytapeout-03p5/mgmt_core_wrapper/verilog
        GCC_PATH:           /home/runner/riscv64-unknown-elf-gcc-8.3.0-2020.04.1-x86_64-linux-ubuntu14/bin/
        GCC_PREFIX:         riscv64-unknown-elf

    # ubuntu
    runs-on: ubuntu-latest
    steps:
    # need the repo checked out
    - name: checkout repo
      uses: actions/checkout@v3

    # install the tt tools
    - name: checkout tt tools repo
      uses: actions/checkout@v3
      with:
        repository: dlmiles/tt-support-tools
        ref: dlm-tt03p5
        path: tt

    # install the tt mux
    - name: checkout tt mux repo
      uses: actions/checkout@v3
      with:
        repository: tinytapeout/tt-multiplexer
        path: tt-multiplexer

    # dlm DEBUG GHA
    - name: DEBUG
      run: |
        set +e
        declare -p | grep GITHUB
        echo "GH_USERNAME=$GH_USERNAME"
        echo -n "GH_TOKEN="
        echo -n $GH_TOKEN | sha1sum -
        echo -n $GH_TOKEN | wc
        declare -p | grep -i suite
        declare -p | grep -i _temp
        exit 0

    # get caravel makefile and management core for sims. need PDK for some of the verification
    - name: caravel & PDK
      run: |
        make setup

    # install riscv gcc
    - name: riscv gcc
      run: |
        cd $HOME
        wget https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.3.0-2020.04.1-x86_64-linux-ubuntu14.tar.gz
        tar -xzf riscv64-unknown-elf-gcc-8.3.0-2020.04.1-x86_64-linux-ubuntu14.tar.gz

    # debug
    - name: debug1
      run: |
        set +e

        which python
        python -V

        which python3
        python3 -V

        which python3.8
        python3.8 -V

        which python3.9
        python3.9 -V

        which python3.10
        python3.10 -V

        pip3 list
        which pip3

        declare -p | grep PYTHON

        echo PATH=$PATH

        pwd
        ls -la

        exit 0

    # install oss fpga tools for cocotb and iverilog
    - name: install oss-cad-suite
      uses: YosysHQ/setup-oss-cad-suite@v2
      with:
          version: '2022-09-03' # pin the version, latest one fails to work with caravel
          github-token: ${{ secrets.GITHUB_TOKEN }}

    # debug
    - name: debug1
      run: |
        set +e

        which python
        python -V

        which python3
        python3 -V

        which python3.8
        python3.8 -V

        which python3.9
        python3.9 -V

        which python3.10
        python3.10 -V

        pip3 list
        which pip3

        declare -p | grep PYTHON

        echo PATH=$PATH

        pwd
        ls -la

        exit 0

    # Set Python up
    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - run: pip install -r tt-multiplexer/proto/requirements.txt
    - run: pip install -r tt/requirements.txt

    # debug
    - name: debug1
      run: |
        set +e

        which python
        python -V

        which python3
        python3 -V

        which python3.8
        python3.8 -V

        which python3.9
        python3.9 -V

        which python3.10
        python3.10 -V

        pip3 list
        which pip3

        declare -p | grep PYTHON

        echo PATH=$PATH

        pwd
        ls -la

        exit 0

    # debug
    - name: debug1
      run: |
        set +e

        source $RUNNER_TEMP/oss-cad-suite/environment

        which python
        python -V

        which python3
        python3 -V

        which python3.8
        python3.8 -V

        which python3.9
        python3.9 -V

        which python3.10
        python3.10 -V

        pip3 list
        which pip3

        declare -p | grep PYTHON

        echo PATH=$PATH

        pwd
        ls -la
        echo "### /"
        ls -la /

        exit 0

    # fetch the repos - test mode
    - name: fetch all
      env:
        GH_TOKEN:           ${{ secrets.GH_TOKEN }}
        GH_USERNAME:        ${{ secrets.GH_USERNAME }}
        GITHUB_TOKEN:       ${{ secrets.GITHUB_TOKEN }}
      run: python ./tt/configure.py --clone-all --fetch-gds --debug --test

    # install projects
    - name: configure for test
      run: python ./tt/configure.py --update-caravel --test

    - name: patch tt-multiplexer
      run: |
        git apply --directory=tt-multiplexer tt_top.patch
        git apply --directory=tt-multiplexer gen_tt_user_module.sram.patch

    # generate the tt mux verilog that instantiates all the modules - use the test version
    - name: module config
      run: |
        cp tt_test_module.yaml tt_user_module.yaml
        make gen-user-module

    # run first set of tests
    - name: basic simulations
      run: |
        cd verilog/dv/mux
        make clean test_mux

    # run caravel level test (currently disabled, as it fails because of Python setup)
    - name: caravel simulations
      run: |
        # Make Python 3.8 from oss-cad-suite the priority in $PATH again and fixup some $ENVs
        source $RUNNER_TEMP/oss-cad-suite/environment
        # Hmm maybe GHA YosysHQ/setup-oss-cad-suite should do this automatically ?
        [ -e /yosyshq ] || sudo ln -s $RUNNER_TEMP/oss-cad-suite /yosyshq
        # Give Python a hint as to where to load things from
        #export PYTHONHOME=$RUNNER_TEMP/oss-cad-suite
        cd verilog/dv/mux_ext
        make clean coco_test

    # run caravel level test (currently disabled, as it fails because of Python setup)
    - name: caravel simulations DEBUG
      run: |
        set +e
        declare -p | grep PYTHON

        source $RUNNER_TEMP/oss-cad-suite/environment
        echo PATH=$PATH

        declare -p | grep PYTHON
        echo "### python3 -V:"
        python3 -V
        pip3 -V
        echo "### python -V:"
        python -V || true
        pip -V || true

        # Hmm maybe oss-cad-suite should supply this just in case ?
        ln -s python3 $RUNNER_TEMP/oss-cad-suite/py3bin/python
        ln -s pip3    $RUNNER_TEMP/oss-cad-suite/py3bin/pip
        ls -la $RUNNER_TEMP/oss-cad-suite/py3bin
        # Hmm maybe GHA YosysHQ/setup-oss-cad-suite should do this automatically ?
        # ln: failed to create symbolic link '/yosyshq': Permission denied
        [ -e /yosyshq ] || ln -s $RUNNER_TEMP/oss-cad-suite /yosyshq
        echo "### LN1"
        ls -lad /yosyshq
        echo "### LN2"
        [ -e /yosyshq ] || sudo ln -s $RUNNER_TEMP/oss-cad-suite /yosyshq
        ls -lad /yosyshq
        ls -la /
        ls -la /yosyshq/lib/python3.8
        hash -r

        echo "### python -V:"
        python -V || true
        pip -V || true

        #pip3 install -r tt-multiplexer/proto/requirements.txt
        #pip3 install -r tt/requirements.txt
        pip3 list

        unset PYTHONPATH
        # Remove DSO location search priority added actions/setup-python
        unset LD_LIBRARY_PATH
        # Our alternative might looks like but lets try without needing it
        #export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$RUNNER_TEMP/oss-cad-suite/lib/python3.8/lib-dynload"

        # Normally this does not need to be setup but maybe actions/setup-python
        export PYTHONHOME=$RUNNER_TEMP/oss-cad-suite

        # Remove entries starting with $pythonLocation from $PATH added by actions/setup-python
        if [ "${pythonLocation:+set}" = "set" ]
        then
          _PATH=$PATH
          echo "BEFORE-PATH: $PATH"
          PATH=$(echo -n "$PATH" | sed -e "s#${pythonLocation}[^:]\+:##g")
          echo "AFTER-PATH: $PATH"
        fi

        set -e
        cd verilog/dv/mux_ext
        make clean coco_test
